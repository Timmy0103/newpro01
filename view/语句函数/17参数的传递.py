'''
函数的参数传递本质上就是：从实参到形参的赋值操作。python中“一切皆对象”,所有的赋值操作都是“引用的赋值”。
所以，python中的参数的传递都是“引用传递”，不是“值传递”。具体操作时分为两类：
1.对“可变对象”进行“写操作”，直接作用于原对象本身
--可变对象：字典、列表、集合、自定义的对象等
2.对“不可变对象”进行“写操作”，会产生一个新的“对象空间’，并用心的值填充这块空间
（起到其他语言的“值传递”效果，但并不是“值传递”）
--不可变对象：数字、字符串、元组、function等
'''
# 传递可变对象
a = [10,20]
print(id(a))
print(a)
def test01(m):
    print(id(m))
    m.append(30)
    print(id(m))
test01(a)
print(a)

# 传递不可变对象
a = 100
def test02(n):
    print("n:", id(n))
    n = n + 200
    print("n:", id(n))
    print(n)
test02(a)
print("a:", id(a))
print(a)